include:
  - project: o/infra/templates
    file: /gitlab-ci/includes/jobs.yaml
cache:
  - key:
      files:
        - backend/yarn.lock
    paths:
      - backend/.yarn-cache/
  - key:
      files:
        - frontend/yarn.lock
    paths:
      - frontend/.yarn-cache/

tests:backend:
  stage: test
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  image: node:16.14.0-alpine3.14
  only:
    - merge_requests
    - main
  script:
    - cd backend
    - yarn install --frozen-lockfile --no-progress --cache-folder .yarn-cache
    - yarn test:ci
  artifacts:
    when: always
    reports:
      junit:
        - backend/junit.xml

tests:frontend-swc:
  stage: test
  image: node:16.13.0-alpine3.14
  only:
    - merge_requests
    - main
  script:
    - cd frontend
    - yarn install --frozen-lockfile --no-progress --cache-folder .yarn-cache
    - rm .babelrc && yarn build

tests:frontend:
  stage: test
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  image: node:16.13.0-alpine3.14
  only:
    - merge_requests
    - main
  script:
    - cd frontend
    - yarn install --frozen-lockfile --no-progress --cache-folder .yarn-cache
    - yarn lint
    - yarn test:ci
  artifacts:
    when: always
    reports:
      junit:
        - frontend/junit.xml

build:backend:
  stage: build
  needs: ["tests:backend"]
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: "$CI_COMMIT_TAG =~ /v.*$/"
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - "[[ -f VERSION.txt ]] && VERSION=$(cat VERSION.txt) || VERSION=${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}"
    - /kaniko/executor --context $CI_PROJECT_DIR/backend --dockerfile $CI_PROJECT_DIR/backend/Dockerfile --destination $CI_REGISTRY_IMAGE/backend:$VERSION --build-arg VERSION=$VERSION
    - VERSION=${CI_COMMIT_TAG:-latest}
    - echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"auth\":\"$DOCKERHUB_AUTH\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR/backend --dockerfile $CI_PROJECT_DIR/backend/Dockerfile --destination octree/voca-system-backend:$VERSION --build-arg VERSION=$VERSION

build:frontend:
  stage: build
  needs: ["tests:frontend"]
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: "$CI_COMMIT_TAG =~ /v.*$/"
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - "[[ -f VERSION.txt ]] && VERSION=$(cat VERSION.txt) || VERSION=${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}"
    - /kaniko/executor --context $CI_PROJECT_DIR/frontend --dockerfile $CI_PROJECT_DIR/frontend/Dockerfile --destination $CI_REGISTRY_IMAGE/frontend:$VERSION --build-arg VERSION=$VERSION
    - VERSION=${CI_COMMIT_TAG:-latest}
    - echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"auth\":\"$DOCKERHUB_AUTH\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR/frontend --dockerfile $CI_PROJECT_DIR/frontend/Dockerfile --destination octree/voca-system-frontend:$VERSION --build-arg VERSION=$VERSION

deploy:backend:
  extends: .deployJelastic
  needs: ["build:backend"]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: "$CI_COMMIT_TAG =~ /v.*$/"
  environment:
    name: Prod Backend
    url: "https://api.voca.city"

deploy:frontend:
  extends: .deployJelastic
  needs: ["build:frontend", "deploy:backend"]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: "$CI_COMMIT_TAG =~ /v.*$/"
  environment:
    name: Prod Frontend
    url: "https://app.voca.city"


version:
  extends: .release
